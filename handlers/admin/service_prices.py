from bot import bot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
import config
import query_answers
from db.repository import get_service_price, set_service_price

SERVICE_LABELS = {
    "auto": "–ü–æ–¥–±–æ—Ä –∞–≤—Ç–æ",
    "details_to": "–î–µ—Ç–∞–ª—å –¥–ª—è –¢–û",
    "details_order": "–î–µ—Ç–∞–ª—å –Ω–∞ –∑–∞–∫–∞–∑"
}

admin_price_states = {}

def build_prices_markup() -> InlineKeyboardMarkup:
    markup = InlineKeyboardMarkup(row_width=1)
    for key, label in SERVICE_LABELS.items():
        price = get_service_price(key)
        markup.add(
            InlineKeyboardButton(
                f"{label}: {price} ‚ÇΩ",
                callback_data=f"{query_answers.ADMIN_PRICES_SET}:{key}"
            )
        )
    markup.add(
        InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data=query_answers.ADMIN)
    )
    return markup

@bot.callback_query_handler(func=lambda c: c.data == query_answers.ADMIN_PRICES)
async def admin_prices(c):
    if c.from_user.id not in config.ADMINS:
        await bot.answer_callback_query(c.id, text="–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω", show_alert=True)
        return
    await bot.edit_message_text(
        "üí∞ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ü–µ–Ω —É—Å–ª—É–≥",
        chat_id=c.message.chat.id,
        message_id=c.message.message_id,
        reply_markup=build_prices_markup()
    )
    await bot.answer_callback_query(c.id)

@bot.callback_query_handler(func=lambda c: c.data.startswith(query_answers.ADMIN_PRICES_SET))
async def admin_set_price(c):
    if c.from_user.id not in config.ADMINS:
        await bot.answer_callback_query(c.id, text="–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω", show_alert=True)
        return
    _, key = c.data.rsplit(":", 1)
    admin_price_states[c.from_user.id] = key
    current = get_service_price(key)
    await bot.edit_message_text(
        f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Ü–µ–Ω—É –¥–ª—è —É—Å–ª—É–≥–∏ ¬´{SERVICE_LABELS[key]}¬ª (—Ç–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: {current} ‚ÇΩ)",
        chat_id=c.message.chat.id,
        message_id=c.message.message_id
    )
    await bot.answer_callback_query(c.id)

@bot.message_handler(func=lambda m: m.from_user.id in admin_price_states)
async def handle_price_input(m):
    key = admin_price_states[m.from_user.id]
    try:
        price = int(m.text)
    except ValueError:
        await bot.send_message(m.chat.id, "–í–≤–µ–¥–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ.")
        return
    set_service_price(key, price)
    await bot.send_message(
        m.chat.id,
        f"‚úÖ –¶–µ–Ω–∞ –¥–ª—è ¬´{SERVICE_LABELS[key]}¬ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: {price} ‚ÇΩ"
    )
    # –æ—á–∏—Å—Ç–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –ø–æ–∫–∞–∂–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω–æ–µ –º–µ–Ω—é
    del admin_price_states[m.from_user.id]
    await bot.send_message(
        m.chat.id,
        "üí∞ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ü–µ–Ω —É—Å–ª—É–≥",
        reply_markup=build_prices_markup()
    )
